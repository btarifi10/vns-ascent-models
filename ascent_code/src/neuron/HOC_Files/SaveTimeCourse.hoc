/*
The copyrights of this software are owned by Duke University.
Please refer to the LICENSE and README.md files for licensing instructions.
The source code can be found on the following GitHub repository: https://github.com/wmglab-duke/ascent
*/

/*
Author: Nikki Pelot
Date created: February 4, 2016

Description:
- Generalized procedure to save time courses to file

Important notes:
-

Variables that must be defined in wrapper/params file:
None.
*/

strdef myfname, mycolprefix, mycolunits, output_format_str
objref output_file

proc SaveTimeCourse() {localobj mydata, mycolsuffix_vec
	myfname = $s1
	mycolprefix = $s2
	mycolsuffix_vec = $o3
	mycolunits = $s4
	mydata = $o5
	if (numarg()>=6) {
		output_format_str = $s6 // set to "%e " to have output be printed in scientific notation; otherwise, set to "%f " to have output printed in floating point format with fixed precision
	} else {
		output_format_str = "%f " // by default, print data in floating point format with fixed precision
	}

	output_file = new File()
	output_file.wopen(myfname)

	// Column headers
	output_file.printf("Time(ms) ")
	for col_ind = 0, mycolsuffix_vec.size()-1 {
		output_file.printf("%s%d%s ", mycolprefix, mycolsuffix_vec.x[col_ind], mycolunits)
	}
	output_file.printf("\n")

	// Time stamp & associated data for each row
	for t_ind = 0, n_tsteps-1 {
		output_file.printf("%f ", t_ind*dt) // save timestamp as floating point numbers with fixed precision
		for col_ind = 0, mycolsuffix_vec.size()-1 {
			output_file.printf(output_format_str, mydata.o[col_ind].x[t_ind])
		}
		output_file.printf("\n")
	}

	output_file.close()
}
